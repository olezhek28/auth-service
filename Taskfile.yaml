version: '3'

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
vars:
  GOLANGCI_LINT_VERSION: 'v2.1.5'
  GCI_VERSION: 'v0.13.6'
  GOFUMPT_VERSION: 'v0.8.0'
  BUF_VERSION: '1.53.0'
  PROTOC_GEN_GO_VERSION: 'v1.36.6'
  PROTOC_GEN_GO_GRPC_VERSION: 'v1.5.1'
  GRPCURL_VERSION: 'v1.9.1'

  BIN_DIR: '{{.ROOT_DIR}}/bin'
  GOLANGCI_LINT: '{{.BIN_DIR}}/golangci-lint'
  GCI: '{{.BIN_DIR}}/gci'
  GOFUMPT: '{{.BIN_DIR}}/gofumpt'
  BUF: '{{.BIN_DIR}}/buf'
  PROTOC_GEN_GO: '{{.BIN_DIR}}/protoc-gen-go'
  PROTOC_GEN_GO_GRPC: '{{.BIN_DIR}}/protoc-gen-go-grpc'
  GRPCURL: '{{.BIN_DIR}}/grpcurl'

  # gRPC —Å–µ—Ä–≤–µ—Ä
  GRPC_HOST: 'localhost:50051'

tasks:
  install-formatters:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã gci –∏ gofumpt –≤ ./bin"
    cmds:
      - |
        [ -f {{.GOFUMPT}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gofumpt {{.GOFUMPT_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install mvdan.cc/gofumpt@{{.GOFUMPT_VERSION}}
        }
        [ -f {{.GCI}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gci {{.GCI_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/daixiang0/gci@{{.GCI_VERSION}}
        }
    status:
      - test -x {{.GOFUMPT}}
      - test -x {{.GCI}}

  format:
    desc: "–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç gofumpt + gci"
    deps: [ install-formatters ]
    cmds:
      - |
        echo "üßº –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ gofumpt ..."
        find . -type f -name '*.go' ! -path '*/mocks/*' -exec {{.GOFUMPT}} -extra -w {} +
      - |
        echo "üéØ –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã —á–µ—Ä–µ–∑ gci ..."
        find . -type f -name '*.go' ! -path '*/mocks/*' -exec {{.GCI}} write -s standard -s default -s "prefix(github.com/olezhek28/microservices-course-examples/week_1/grpc_with_interceptor)" {} +

  install-golangci-lint:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç golangci-lint –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.GOLANGCI_LINT}} ] || {
          mkdir -p {{.BIN_DIR}}
          echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º golangci-lint {{.GOLANGCI_LINT_VERSION}}..."
          GOBIN={{.BIN_DIR}} go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@{{.GOLANGCI_LINT_VERSION}}
        }
    status:
      - test -x {{.GOLANGCI_LINT}}

  lint:
    desc: "–ó–∞–ø—É—Å–∫–∞–µ—Ç golangci-lint –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"
    deps: [ install-golangci-lint ]
    cmds:
      - '{{.GOLANGCI_LINT}} run ./... --config=.golangci.yml'

  install-buf:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Buf –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        mkdir -p {{.BIN_DIR}}
        [ -f {{.BUF}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º buf {{.BUF_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/bufbuild/buf/cmd/buf@v{{.BUF_VERSION}}
        }
    status:
      - test -x {{.BUF}}

  install-grpcurl:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç grpcurl –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        mkdir -p {{.BIN_DIR}}
        [ -f {{.GRPCURL}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º grpcurl {{.GRPCURL_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/fullstorydev/grpcurl/cmd/grpcurl@{{.GRPCURL_VERSION}}
        }
    status:
      - test -x {{.GRPCURL}}

  proto:install-plugins:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç protoc –ø–ª–∞–≥–∏–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.PROTOC_GEN_GO}} ] || {
          echo 'üì¶ Installing protoc-gen-go...'
          GOBIN={{.BIN_DIR}} go install google.golang.org/protobuf/cmd/protoc-gen-go@{{.PROTOC_GEN_GO_VERSION}}
        }
        [ -f {{.PROTOC_GEN_GO_GRPC}} ] || {
          echo 'üì¶ Installing protoc-gen-go-grpc...'
          GOBIN={{.BIN_DIR}} go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@{{.PROTOC_GEN_GO_GRPC_VERSION}}
        }

  proto:lint:
    deps: [ install-buf, proto:install-plugins ]
    desc: –ü—Ä–æ–≤–µ—Ä–∫–∞ .proto-—Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∏–ª—é
    dir: proto
    cmds:
      - '{{.BUF}} lint'

  proto:gen:
    deps: [ install-buf, proto:install-plugins, proto:lint ]
    desc: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Go-–∫–æ–¥–∞ –∏–∑ .proto
    dir: proto
    cmds:
      - '{{.BUF}} generate'

  # API —Ç–µ—Å—Ç—ã
  test:grpc:list:
    deps: [ install-grpcurl ]
    desc: "–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ gRPC —Å–µ—Ä–≤–∏—Å—ã"
    cmds:
      - echo "üìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö gRPC —Å–µ—Ä–≤–∏—Å–æ–≤:"
      - '{{.GRPCURL}} -plaintext {{.GRPC_HOST}} list'

  test:grpc:describe:
    deps: [ install-grpcurl ]
    desc: "–û–ø–∏—Å–∞–Ω–∏–µ AuthService"
    cmds:
      - echo "üìñ –û–ø–∏—Å–∞–Ω–∏–µ AuthService:"
      - '{{.GRPCURL}} -plaintext {{.GRPC_HOST}} describe auth.v1.AuthService'

  test:register:success:
    deps: [ install-grpcurl ]
    desc: "–¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    cmds:
      - echo "‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é..."
      - |
        {{.GRPCURL}} -plaintext \
          -d '{
            "email": "test@example.com",
            "username": "testuser",
            "password": "password123"
          }' \
          {{.GRPC_HOST}} auth.v1.AuthService/Register

  test:register:duplicate:
    deps: [ install-grpcurl ]
    desc: "–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –¥—É–±–ª–∏—Ä—É—é—â–∏–º—Å—è email"
    cmds:
      - echo "‚ùå –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å –¥—É–±–ª–∏—Ä—É—é—â–∏–º—Å—è email..."
      - |
        {{.GRPCURL}} -plaintext \
          -d '{
            "email": "test@example.com",
            "username": "testuser2",
            "password": "password123"
          }' \
          {{.GRPC_HOST}} auth.v1.AuthService/Register

  test:register:invalid:
    deps: [ install-grpcurl ]
    desc: "–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
    cmds:
      - echo "‚ùå –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å –∫–æ—Ä–æ—Ç–∫–∏–º –ø–∞—Ä–æ–ª–µ–º..."
      - |
        {{.GRPCURL}} -plaintext \
          -d '{
            "email": "invalid@example.com",
            "username": "invaliduser",
            "password": "123"
          }' \
          {{.GRPC_HOST}} auth.v1.AuthService/Register
      - echo "‚ùå –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±–µ–∑ email..."
      - |
        {{.GRPCURL}} -plaintext \
          -d '{
            "email": "",
            "username": "noemailuser",
            "password": "password123"
          }' \
          {{.GRPC_HOST}} auth.v1.AuthService/Register

  test:login:
    deps: [ install-grpcurl ]
    desc: "–¢–µ—Å—Ç –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É"
    cmds:
      - echo "üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É..."
      - |
        {{.GRPCURL}} -plaintext \
          -d '{
            "email": "test@example.com",
            "password": "password123"
          }' \
          {{.GRPC_HOST}} auth.v1.AuthService/Login

  test:whoami:
    deps: [ install-grpcurl ]
    desc: "–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"
    cmds:
      - echo "üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ..."
      - |
        {{.GRPCURL}} -plaintext \
          -d '{
            "session_uuid": "session-uuid-123"
          }' \
          {{.GRPC_HOST}} auth.v1.AuthService/WhoAmI

  test:api:all:
    desc: "–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö API —Ç–µ—Å—Ç–æ–≤"
    deps: [ install-grpcurl ]
    cmds:
      - task: test:grpc:list
      - task: test:grpc:describe
      - task: test:register:success
      - task: test:register:duplicate
      - task: test:register:invalid
      - task: test:login
      - task: test:whoami
